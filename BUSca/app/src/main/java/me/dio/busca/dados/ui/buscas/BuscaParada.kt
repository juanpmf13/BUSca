package me.dio.busca.dados.ui.buscasimport android.content.Contextimport android.content.Intentimport android.util.Logimport android.widget.Toastimport androidx.core.net.toUriimport me.dio.busca.dados.Paradaimport me.dio.busca.dados.servicos.EndPointimport me.dio.busca.dados.ui.map.MapsActivityimport retrofit2.Callimport retrofit2.Callbackimport retrofit2.Responseclass BuscaParada  {    companion object{        private lateinit var context: Context        fun setContext(context: Context){            this.context= context        }        fun buscaParadaPorLinha(linha: Int, service: EndPoint) {            val response = service.getParadaPorLinha(linha)            response.enqueue(object : Callback<ArrayList<Parada>> {                override fun onFailure(call: Call<ArrayList<Parada>>, t: Throwable) {                    Toast.makeText(context, t.message, Toast.LENGTH_SHORT).show()                }                override fun onResponse(call: Call<ArrayList<Parada>>, response: Response<ArrayList<Parada>>) {                    response.body()                    if (response.body() != null) {                        val intent = Intent(context, MapsActivity::class.java)                        intent.putParcelableArrayListExtra("paradaportermo", response.body())                        intent.putExtra("codigo", 1)                        context.startActivity(intent)                    }                }            })        }        fun buscaParadaPorTermo(termoBusca:String, service: EndPoint) {            val response = service.getParadaPorTermo(termoBusca)            response.enqueue(object : Callback<ArrayList<Parada>>{                override fun onFailure(call: Call<ArrayList<Parada>>, t: Throwable) {                    Toast.makeText(context, t.message, Toast.LENGTH_SHORT).show()                }                override fun onResponse(call: Call<ArrayList<Parada>>, response: Response<ArrayList<Parada>>) {                    response.body()                    if (response.body() != null) {                        val intent = Intent(context, MapsActivity::class.java)                        intent.putParcelableArrayListExtra("paradaportermo", response.body())                        intent.putExtra("codigo", 1)                        context.startActivity(intent)                    }                }            })        }        fun buscaParadaPorCorredor(corredor: Int, service: EndPoint) {            val response = service.getParadaPorCorredor(corredor)            response.enqueue(object : Callback<ArrayList<Parada>>{                override fun onFailure(call: Call<ArrayList<Parada>>, t: Throwable) {                    Toast.makeText(context, t.message, Toast.LENGTH_SHORT).show()                }                override fun onResponse(call: Call<ArrayList<Parada>>, response: Response<ArrayList<Parada>>) {                    response.body()                    if (response.body() != null) {                        val intent = Intent(context, MapsActivity::class.java)                        intent.putParcelableArrayListExtra("paradaportermo", response.body())                        intent.putExtra("codigo", 1)                        context.startActivity(intent)                    }                }            })        }        }    }